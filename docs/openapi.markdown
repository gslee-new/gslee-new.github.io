---
layout: default
title: OpenApi 문서화 전략
---

## OPenApi 문서화 전략

### 이슈
기획자 및 FE에게 api 문서를 제공한다. -> openapi3, OAS
수기로 api 명세서를 만드는 수고를 덜고 싶다. -> openapi3, spring rest doc
프로젝트가 생성될 때마다 OpenApi 문서처리를 위한 설정에 소비되는 시간을 아끼는 방법이 필요하다. 
확장성을 고려하여 여러 프로젝트의 명세서도 제공할 수 있으면 좋겠다. OAS
비즈니스 코드에 문서라이브러리 코드가 혼재된 코드가 되지 않아야한다. -> 기본 데이터만 추출되어 사용자에게 상세한 내용을 제공하기 힘듬, 
openapi3 비즈니스 코드에 상세 정보를 기입
spring rest docs -> rest-docs-api 라이브러리와 함께 테스트 코드에 상세정보를 제공할 수 있음

초기 구현단계에서 테스트 데이터가 없을 수 있기에 목데이터를 제공하고 싶다.

### 배경 
OpenApi 문서를 제공하여 프론트엔드에게 api 규격을 전달하고 기획자도 api 정보를 조회할 수 있게 한다.
프로젝트 초기 백엔드에 api 구현이 되어 있지 않기 때문에 프론트엔드의 개발 일정이 뒤로 밀리는 경향이 있다. 
이 점을 보완하기 위해서 초기 설계된 내용으로 OpenApi 문서를 먼저 만들어 제공하면 기획 및 프론트엔드에게 어떻게 데이터가
제공될것인지를 이해시킬 수 있다.
api 인터페이스 명세서를 수기로 만들어야하는 번거로움이 발생.

### 목표
- OpenApi 문서화 도구를 이용한다.
- 

### 설계

|              | swagger    | spring rest docs |
|--------------|------------|------------------|
| mock 데이터 제공  | controller | 테스트 불가       |
| mock 데이터 미제공 | OAS        | 테스트 불가       |



| Swagger                | Swagger&rest docs                   |
|------------------------|-------------------------------------|
| api 테스트 제공             | api 테스트 제공                          |
| OAS 사용가능               | OAS 사용 가능                           |
| OAS 생성(swagger editor) | OAS 생성(rest docs build)             |
| Swagger 어노테이션 사용 가능    | OAS 제공과 Swagger 제공하는 openapi 따로 봐야함 |
| 테스트 코드 미제공             | 테스트 코드 제공                           |
| 상세 명세 가능(어노테이션)        | 상세명세 가능(test code의 document)        |
| Swagger 동작과 swagger editor 다룰줄 알아야함| rest docs과 테스트 코드 작성을 할 줄 알야야 함|

Swagger 적용안

Swagger + rest docs 적용안


### 도입



## 문서 정리
프로젝트 진행에 발생될 수 있는 에로 사항을 해결하기 위해서 고민한 부분과 한계점에 대한 내용을 기술한다.
고민하면서 알게된 기술을 나열해본다.
한계점을 해결하지 못한 부분을 기술한다.

